# Generated by Django 2.2.14 on 2020-12-14 12:47

from django.db import migrations, models
import django.db.models.deletion
import export_readiness.models
import export_readiness.panels
import modelcluster.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailimages', '0022_uploadedimage'),
        ('wagtailcore', '0052_pagelogentry'),
        ('wagtailmedia', '0003_copy_media_permissions_to_collections'),
        ('export_readiness', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticlePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('service_name', models.CharField(choices=[('FIND_A_SUPPLIER', 'Find a Supplier'), ('EXPORT_READINESS', 'Export Readiness'), ('INVEST', 'Invest'), ('COMPONENTS', 'Components'), ('GREAT_INTERNATIONAL', 'Great International')], db_index=True, max_length=100, null=True)),
                ('uses_tree_based_routing', models.BooleanField(default=False, help_text="Allow this page's URL to be determined by its slug, and the slugs of its ancestors in the page tree.", verbose_name='tree-based routing enabled')),
                ('type_of_article', models.TextField(choices=[('Blog', 'Blog'), ('Advice', 'Advice'), ('Case study', 'Case study'), ('Campaign', 'Campaign')], null=True)),
                ('article_title', models.TextField()),
                ('article_subheading', models.TextField(blank=True, help_text='This is a subheading that displays below the main title on the article page')),
                ('article_teaser', models.TextField(blank=True, help_text='This is a subheading that displays when the article is featured on another page', null=True)),
                ('article_video_transcript', export_readiness.models.MarkdownField(blank=True, help_text='If the video is present, a transcript must be provided.', null=True)),
                ('article_body_text', export_readiness.models.MarkdownField()),
                ('cta_title', models.CharField(blank=True, max_length=255, verbose_name='CTA title')),
                ('cta_teaser', models.TextField(blank=True, verbose_name='CTA teaser')),
                ('cta_link_label', models.CharField(blank=True, max_length=255, verbose_name='CTA link label')),
                ('cta_link', models.CharField(blank=True, max_length=255, verbose_name='CTA link')),
                ('article_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('article_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailmedia.Media')),
                ('related_page_one', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='export_readiness.ArticlePage')),
                ('related_page_three', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='export_readiness.ArticlePage')),
                ('related_page_two', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='export_readiness.ArticlePage')),
                ('tags', modelcluster.fields.ParentalManyToManyField(blank=True, to='export_readiness.Tag')),
            ],
            options={
                'abstract': False,
            },
            bases=(export_readiness.panels.ArticlePagePanels, export_readiness.models.ServiceNameUniqueSlugMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='CampaignPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('service_name', models.CharField(choices=[('FIND_A_SUPPLIER', 'Find a Supplier'), ('EXPORT_READINESS', 'Export Readiness'), ('INVEST', 'Invest'), ('COMPONENTS', 'Components'), ('GREAT_INTERNATIONAL', 'Great International')], db_index=True, max_length=100, null=True)),
                ('uses_tree_based_routing', models.BooleanField(default=False, help_text="Allow this page's URL to be determined by its slug, and the slugs of its ancestors in the page tree.", verbose_name='tree-based routing enabled')),
                ('campaign_heading', models.CharField(max_length=255)),
                ('section_one_heading', models.CharField(max_length=255)),
                ('section_one_intro', export_readiness.models.MarkdownField()),
                ('selling_point_one_heading', models.CharField(max_length=255)),
                ('selling_point_one_content', export_readiness.models.MarkdownField()),
                ('selling_point_two_heading', models.CharField(blank=True, max_length=255, null=True)),
                ('selling_point_two_content', export_readiness.models.MarkdownField(blank=True, null=True)),
                ('selling_point_three_heading', models.CharField(blank=True, max_length=255, null=True)),
                ('selling_point_three_content', export_readiness.models.MarkdownField(blank=True, null=True)),
                ('section_one_contact_button_url', models.CharField(blank=True, max_length=255, null=True)),
                ('section_one_contact_button_text', models.CharField(blank=True, max_length=255, null=True)),
                ('section_two_heading', models.CharField(max_length=255)),
                ('section_two_intro', export_readiness.models.MarkdownField()),
                ('section_two_contact_button_url', models.CharField(blank=True, max_length=255, null=True)),
                ('section_two_contact_button_text', models.CharField(blank=True, max_length=255, null=True)),
                ('related_content_heading', models.CharField(max_length=255)),
                ('related_content_intro', export_readiness.models.MarkdownField()),
                ('cta_box_message', models.CharField(max_length=255)),
                ('cta_box_button_url', models.CharField(max_length=255)),
                ('cta_box_button_text', models.CharField(max_length=255)),
                ('campaign_hero_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('related_page_one', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='export_readiness.ArticlePage')),
                ('related_page_three', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='export_readiness.ArticlePage')),
                ('related_page_two', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='export_readiness.ArticlePage')),
                ('section_one_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('section_two_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('selling_point_one_icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('selling_point_three_icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('selling_point_two_icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=(export_readiness.panels.CampaignPagePanels, export_readiness.models.ServiceNameUniqueSlugMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='ArticleListingPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('service_name', models.CharField(choices=[('FIND_A_SUPPLIER', 'Find a Supplier'), ('EXPORT_READINESS', 'Export Readiness'), ('INVEST', 'Invest'), ('COMPONENTS', 'Components'), ('GREAT_INTERNATIONAL', 'Great International')], db_index=True, max_length=100, null=True)),
                ('uses_tree_based_routing', models.BooleanField(default=False, help_text="Allow this page's URL to be determined by its slug, and the slugs of its ancestors in the page tree.", verbose_name='tree-based routing enabled')),
                ('landing_page_title', models.CharField(max_length=255)),
                ('hero_teaser', models.CharField(blank=True, max_length=255, null=True)),
                ('list_teaser', export_readiness.models.MarkdownField(blank=True, null=True)),
                ('hero_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=(export_readiness.panels.ArticleListingPagePanels, export_readiness.models.ServiceNameUniqueSlugMixin, 'wagtailcore.page'),
        ),
    ]
